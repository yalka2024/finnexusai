apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: finnexus-ingress
  namespace: finnexus-ai
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/ssl-protocols: "TLSv1.2 TLSv1.3"
    nginx.ingress.kubernetes.io/ssl-ciphers: "ECDHE-RSA-AES128-GCM-SHA256,ECDHE-RSA-AES256-GCM-SHA384"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
spec:
  tls:
  - hosts:
    - finnexusai.com
    - www.finnexusai.com
    - api.finnexusai.com
    secretName: finnexus-tls
  rules:
  - host: finnexusai.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: finnexus-frontend-service
            port:
              number: 80
  - host: www.finnexusai.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: finnexus-frontend-service
            port:
              number: 80
  - host: api.finnexusai.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: finnexus-backend-service
            port:
              number: 80
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: admin@finnexusai.com
    privateKeySecretRef:
      name: letsencrypt-prod
    solvers:
    - http01:
        ingress:
          class: nginx
