apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: finnexus-ingress
  namespace: finnexus-production
  labels:
    app: finnexus-ai
    component: ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-protocols: "TLSv1.2 TLSv1.3"
    nginx.ingress.kubernetes.io/ssl-ciphers: "ECDHE+AESGCM:ECDHE+CHACHA20:DHE+AESGCM:DHE+CHACHA20"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://app.finainexus.com"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/upstream-hash-by: "$binary_remote_addr"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - api.finainexus.com
    - app.finainexus.com
    secretName: finnexus-tls-secret
  rules:
  - host: api.finainexus.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: finnexus-backend-service
            port:
              number: 3001
      - path: /health
        pathType: Exact
        backend:
          service:
            name: finnexus-backend-service
            port:
              number: 3001
      - path: /metrics
        pathType: Exact
        backend:
          service:
            name: finnexus-backend-service
            port:
              number: 3001
  - host: app.finainexus.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: finnexus-frontend-service
            port:
              number: 3000
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: finnexus-backend-service
            port:
              number: 3001
---
apiVersion: v1
kind: Service
metadata:
  name: finnexus-frontend-service
  namespace: finnexus-production
  labels:
    app: finnexus-frontend
    component: frontend
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 3000
    targetPort: 3000
    protocol: TCP
  selector:
    app: finnexus-frontend



