apiVersion: v1
kind: ConfigMap
metadata:
  name: multi-region-config
  namespace: finnexus-production
data:
  regions: |
    us-west-2: Oregon
    us-east-1: Virginia
    eu-west-1: Ireland
    ap-southeast-1: Singapore
  primary-region: "us-west-2"
  failover-region: "us-east-1"
---
apiVersion: v1
kind: Service
metadata:
  name: finnexus-global-load-balancer
  namespace: finnexus-production
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "tcp"
    service.beta.kubernetes.io/aws-load-balancer-connection-draining-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-connection-draining-timeout: "60"
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
    name: http
  - port: 443
    targetPort: 3000
    protocol: TCP
    name: https
  selector:
    app: finnexus-frontend
---
apiVersion: v1
kind: Service
metadata:
  name: finnexus-api-global-load-balancer
  namespace: finnexus-production
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "tcp"
    service.beta.kubernetes.io/aws-load-balancer-connection-draining-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-connection-draining-timeout: "60"
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 3001
    protocol: TCP
    name: http
  - port: 443
    targetPort: 3001
    protocol: TCP
    name: https
  selector:
    app: finnexus-backend
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: finnexus-global-ingress
  namespace: finnexus-production
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rate-limit: "1000"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/upstream-hash-by: "$binary_remote_addr"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - api.finainexus.com
    - app.finainexus.com
    - *.finainexus.com
    secretName: finnexus-global-tls-secret
  rules:
  - host: api.finainexus.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: finnexus-backend-service
            port:
              number: 3001
  - host: app.finainexus.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: finnexus-frontend-service
            port:
              number: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: finnexus-backend-us-west-2
  namespace: finnexus-production
  labels:
    app: finnexus-backend
    region: us-west-2
spec:
  replicas: 5
  selector:
    matchLabels:
      app: finnexus-backend
      region: us-west-2
  template:
    metadata:
      labels:
        app: finnexus-backend
        region: us-west-2
    spec:
      containers:
      - name: finnexus-backend
        image: finnexusai-backend:latest
        ports:
        - containerPort: 3001
        env:
        - name: NODE_ENV
          value: "production"
        - name: REGION
          value: "us-west-2"
        - name: POSTGRES_HOST
          value: "postgres-primary.us-west-2.finnexus-databases.svc.cluster.local"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 5
          periodSeconds: 5
      nodeSelector:
        kubernetes.io/arch: amd64
        node.kubernetes.io/instance-type: "m5.large"
      tolerations:
      - key: "region"
        operator: "Equal"
        value: "us-west-2"
        effect: "NoSchedule"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: finnexus-backend-us-east-1
  namespace: finnexus-production
  labels:
    app: finnexus-backend
    region: us-east-1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: finnexus-backend
      region: us-east-1
  template:
    metadata:
      labels:
        app: finnexus-backend
        region: us-east-1
    spec:
      containers:
      - name: finnexus-backend
        image: finnexusai-backend:latest
        ports:
        - containerPort: 3001
        env:
        - name: NODE_ENV
          value: "production"
        - name: REGION
          value: "us-east-1"
        - name: POSTGRES_HOST
          value: "postgres-replica.us-east-1.finnexus-databases.svc.cluster.local"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 5
          periodSeconds: 5
      nodeSelector:
        kubernetes.io/arch: amd64
        node.kubernetes.io/instance-type: "m5.large"
      tolerations:
      - key: "region"
        operator: "Equal"
        value: "us-east-1"
        effect: "NoSchedule"



