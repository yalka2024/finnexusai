apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-cluster-config
  namespace: finnexus-production
data:
  redis.conf: |
    # Redis Cluster Configuration
    port 6379
    cluster-enabled yes
    cluster-config-file nodes.conf
    cluster-node-timeout 5000
    appendonly yes
    appendfsync everysec
    
    # Memory Management
    maxmemory 2gb
    maxmemory-policy allkeys-lru
    
    # Performance
    tcp-keepalive 300
    timeout 0
    
    # Security
    requirepass finnexus-redis-password-2024
    masterauth finnexus-redis-password-2024
    
    # Logging
    loglevel notice
    logfile ""
    
    # Persistence
    save 900 1
    save 300 10
    save 60 10000
    
    # Network
    bind 0.0.0.0
    protected-mode yes
    
    # Cluster specific
    cluster-announce-ip 127.0.0.1
    cluster-announce-port 6379
    cluster-announce-bus-port 16379
---
apiVersion: v1
kind: Secret
metadata:
  name: redis-cluster-secret
  namespace: finnexus-production
type: Opaque
data:
  redis-password: ZmlubmV4dXMtcmVkaXMtYnVpbGRlci1wYXNzd29yZC0yMDI0  # finnexus-redis-password-2024
---
apiVersion: v1
kind: Service
metadata:
  name: redis-cluster-service
  namespace: finnexus-production
  labels:
    app: redis-cluster
spec:
  clusterIP: None
  ports:
  - port: 6379
    targetPort: 6379
    name: client
  - port: 16379
    targetPort: 16379
    name: gossip
  selector:
    app: redis-cluster
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-cluster
  namespace: finnexus-production
  labels:
    app: redis-cluster
spec:
  serviceName: redis-cluster-service
  replicas: 6
  selector:
    matchLabels:
      app: redis-cluster
  template:
    metadata:
      labels:
        app: redis-cluster
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
          name: client
        - containerPort: 16379
          name: gossip
        command:
        - redis-server
        - /etc/redis/redis.conf
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-cluster-secret
              key: redis-password
        volumeMounts:
        - name: redis-config
          mountPath: /etc/redis
        - name: redis-data
          mountPath: /data
        resources:
          requests:
            memory: "1Gi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 1
      volumes:
      - name: redis-config
        configMap:
          name: redis-cluster-config
  volumeClaimTemplates:
  - metadata:
      name: redis-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi
      storageClassName: fast-ssd
---
apiVersion: v1
kind: Service
metadata:
  name: redis-cluster-headless
  namespace: finnexus-production
  labels:
    app: redis-cluster
spec:
  clusterIP: None
  ports:
  - port: 6379
    targetPort: 6379
    name: client
  - port: 16379
    targetPort: 16379
    name: gossip
  selector:
    app: redis-cluster
---
apiVersion: batch/v1
kind: Job
metadata:
  name: redis-cluster-init
  namespace: finnexus-production
spec:
  template:
    spec:
      containers:
      - name: redis-cluster-init
        image: redis:7-alpine
        command:
        - /bin/sh
        - -c
        - |
          # Wait for Redis pods to be ready
          sleep 30
          
          # Create Redis cluster
          redis-cli --cluster create \
            redis-cluster-0.redis-cluster-service:6379 \
            redis-cluster-1.redis-cluster-service:6379 \
            redis-cluster-2.redis-cluster-service:6379 \
            redis-cluster-3.redis-cluster-service:6379 \
            redis-cluster-4.redis-cluster-service:6379 \
            redis-cluster-5.redis-cluster-service:6379 \
            --cluster-replicas 1 \
            --cluster-yes \
            -a finnexus-redis-password-2024
          
          # Verify cluster status
          redis-cli --cluster check redis-cluster-0.redis-cluster-service:6379 -a finnexus-redis-password-2024
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-cluster-secret
              key: redis-password
      restartPolicy: OnFailure
  backoffLimit: 3
---
apiVersion: v1
kind: Service
metadata:
  name: redis-cluster-external
  namespace: finnexus-production
  labels:
    app: redis-cluster
spec:
  type: ClusterIP
  ports:
  - port: 6379
    targetPort: 6379
    name: client
  selector:
    app: redis-cluster
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-cluster-monitoring
  namespace: finnexus-production
data:
  redis-exporter.yaml: |
    # Redis Exporter Configuration for Prometheus
    redis_addr: "redis://redis-cluster-external:6379"
    redis_password: "finnexus-redis-password-2024"
    namespace: "redis"
    check-keys: "db0,db1,db2,db3,db4,db5"
    check-single-keys: ""
    check-streams: ""
    check-keys-glob: "*"
    check-single-keys-glob: ""
    count-keys: ""
    script: ""
    incl-system-metrics: true
    skip-tls-verification: false
    set-client-name: true
    is-tile38: false
    export-client-list: false
    export-client-port: false
    redis-only-metrics: false
    ping-on-connect: true
    include-system-metrics: true
    is-tile38: false
    script: ""
    incl-config-metrics: false
    redacted-addr: false
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-exporter
  namespace: finnexus-production
  labels:
    app: redis-exporter
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-exporter
  template:
    metadata:
      labels:
        app: redis-exporter
    spec:
      containers:
      - name: redis-exporter
        image: oliver006/redis_exporter:latest
        ports:
        - containerPort: 9121
          name: metrics
        env:
        - name: REDIS_ADDR
          value: "redis://redis-cluster-external:6379"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-cluster-secret
              key: redis-password
        - name: REDIS_EXPORTER_INCL_SYSTEM_METRICS
          value: "true"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /metrics
            port: 9121
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /metrics
            port: 9121
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: redis-exporter-service
  namespace: finnexus-production
  labels:
    app: redis-exporter
spec:
  ports:
  - port: 9121
    targetPort: 9121
    name: metrics
  selector:
    app: redis-exporter



