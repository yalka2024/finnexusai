apiVersion: v1
kind: ConfigMap
metadata:
  name: k6-load-test-config
  namespace: finnexus-production
data:
  load-test.js: |
    import http from 'k6/http';
    import { check } from 'k6';
    import { Rate, Trend, Counter } from 'k6/metrics';

    // Custom metrics
    const errorRate = new Rate('errors');
    const responseTime = new Trend('response_time');
    const requestCount = new Counter('requests');

    // Test configuration
    export const options = {
      stages: [
        { duration: '2m', target: 100 },
        { duration: '5m', target: 1000 },
        { duration: '10m', target: 5000 },
        { duration: '15m', target: 10000 },
        { duration: '5m', target: 0 },
      ],
      thresholds: {
        http_req_duration: ['p(95)<1000'],
        http_req_failed: ['rate<0.1'],
        errors: ['rate<0.1'],
      },
    };

    const BASE_URL = __ENV.BASE_URL || 'http://finnexus-backend-service:3001';

    export default function() {
      const response = http.get(`${BASE_URL}/health`);
      
      const success = check(response, {
        'health check status is 200': (r) => r.status === 200,
        'health check response time < 1s': (r) => r.timings.duration < 1000,
      });
      
      if (!success) {
        errorRate.add(1);
      } else {
        errorRate.add(0);
      }
      
      responseTime.add(response.timings.duration);
      requestCount.add(1);
    }
  
  stress-test.js: |
    import http from 'k6/http';
    import { check } from 'k6';

    export const options = {
      stages: [
        { duration: '1m', target: 100 },
        { duration: '1m', target: 1000 },
        { duration: '1m', target: 100 },
        { duration: '1m', target: 5000 },
        { duration: '1m', target: 100 },
      ],
      thresholds: {
        http_req_duration: ['p(95)<2000'],
        http_req_failed: ['rate<0.2'],
      },
    };

    const BASE_URL = __ENV.BASE_URL || 'http://finnexus-backend-service:3001';

    export default function() {
      const response = http.get(`${BASE_URL}/health`);
      
      check(response, {
        'status is 200': (r) => r.status === 200,
        'response time < 2s': (r) => r.timings.duration < 2000,
      });
    }
---
apiVersion: batch/v1
kind: Job
metadata:
  name: k6-load-test
  namespace: finnexus-production
spec:
  template:
    spec:
      containers:
      - name: k6
        image: grafana/k6:latest
        command:
        - k6
        - run
        - --out=prometheus=prometheus-pushgateway:9091
        - /scripts/load-test.js
        env:
        - name: BASE_URL
          value: "http://finnexus-backend-service:3001"
        volumeMounts:
        - name: test-scripts
          mountPath: /scripts
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
      volumes:
      - name: test-scripts
        configMap:
          name: k6-load-test-config
      restartPolicy: Never
  backoffLimit: 1
---
apiVersion: batch/v1
kind: Job
metadata:
  name: k6-stress-test
  namespace: finnexus-production
spec:
  template:
    spec:
      containers:
      - name: k6
        image: grafana/k6:latest
        command:
        - k6
        - run
        - --out=prometheus=prometheus-pushgateway:9091
        - /scripts/stress-test.js
        env:
        - name: BASE_URL
          value: "http://finnexus-backend-service:3001"
        volumeMounts:
        - name: test-scripts
          mountPath: /scripts
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
      volumes:
      - name: test-scripts
        configMap:
          name: k6-load-test-config
      restartPolicy: Never
  backoffLimit: 1



