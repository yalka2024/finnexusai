# Multi-stage production Dockerfile for FinNexusAI Backend
# Stage 1: Build stage
FROM node:18-alpine AS builder

# Set working directory
WORKDIR /app

# Install build dependencies
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    git \
    curl

# Copy package files
COPY package*.json ./
COPY tsconfig*.json ./

# Install dependencies
RUN npm ci --only=production && npm cache clean --force

# Copy source code
COPY . .

# Build application
RUN npm run build

# Stage 2: Production stage
FROM node:18-alpine AS production

# Create app user
RUN addgroup -g 1000 -S finnexus && \
    adduser -u 1000 -S finnexus -G finnexus

# Set working directory
WORKDIR /app

# Install runtime dependencies
RUN apk add --no-cache \
    curl \
    dumb-init \
    tini

# Copy built application from builder stage
COPY --from=builder --chown=finnexus:finnexus /app/node_modules ./node_modules
COPY --from=builder --chown=finnexus:finnexus /app/dist ./dist
COPY --from=builder --chown=finnexus:finnexus /app/package*.json ./

# Create necessary directories
RUN mkdir -p /app/logs /app/uploads /app/tmp && \
    chown -R finnexus:finnexus /app

# Set environment variables
ENV NODE_ENV=production
ENV PORT=3000
ENV NODE_OPTIONS="--max-old-space-size=1536 --max-semi-space-size=128"

# Set resource limits
ENV NODE_HEAP_SIZE=1536
ENV NODE_GC_INTERVAL=100

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:3000/api/v1/health || exit 1

# Switch to non-root user
USER finnexus

# Expose port
EXPOSE 3000

# Use dumb-init to handle signals properly
ENTRYPOINT ["dumb-init", "--"]

# Start application
CMD ["node", "dist/index.js"]

# Labels for metadata
LABEL maintainer="FinNexusAI Team"
LABEL version="1.0.0"
LABEL description="FinNexusAI Backend Production Image"
LABEL org.opencontainers.image.title="FinNexusAI Backend"
LABEL org.opencontainers.image.description="Production-ready FinNexusAI backend with enterprise security and monitoring"
LABEL org.opencontainers.image.version="1.0.0"
LABEL org.opencontainers.image.created="2024-01-01T00:00:00Z"
LABEL org.opencontainers.image.source="https://github.com/finnexusai/backend"
LABEL org.opencontainers.image.licenses="MIT"

# Security labels
LABEL security.scanning="enabled"
LABEL security.vulnerability-scanning="enabled"
LABEL security.compliance="SOC2-PCI-ISO27001"