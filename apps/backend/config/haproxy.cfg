# FinNexusAI Production HAProxy Configuration
# Enterprise-grade load balancer with advanced features

global
    # Basic settings
    daemon
    user haproxy
    group haproxy
    chroot /var/lib/haproxy
    pidfile /var/run/haproxy.pid
    
    # Logging
    log stdout local0
    log stdout local1 notice
    
    # SSL/TLS settings
    ssl-default-bind-ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256
    ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets
    
    # Performance tuning
    tune.ssl.default-dh-param 2048
    tune.bufsize 32768
    tune.maxrewrite 1024
    tune.http.maxhdr 101
    tune.http.cookielen 4096
    
    # Security settings
    stats socket /var/lib/haproxy/stats mode 660 level admin
    stats timeout 30s

defaults
    # Logging
    log global
    option httplog
    option dontlognull
    option log-health-checks
    
    # Timeouts
    timeout connect 5000ms
    timeout client 50000ms
    timeout server 50000ms
    timeout http-request 10s
    timeout http-keep-alive 10s
    timeout check 10s
    
    # Error handling
    option redispatch
    retries 3
    
    # Health checks
    option httpchk GET /health
    
    # Compression
    compression algo gzip
    compression type text/plain text/css text/javascript application/javascript application/json
    
    # Security headers
    http-response set-header X-Frame-Options SAMEORIGIN
    http-response set-header X-Content-Type-Options nosniff
    http-response set-header X-XSS-Protection "1; mode=block"
    http-response set-header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"

# Frontend for main API
frontend finnexus_api_frontend
    bind *:80
    bind *:443 ssl crt /etc/ssl/certs/api.finnexusai.com.pem
    
    # Redirect HTTP to HTTPS
    redirect scheme https if !{ ssl_fc }
    
    # Rate limiting
    stick-table type ip size 100k expire 30s store http_req_rate(10s)
    http-request track-sc0 src
    http-request deny if { sc_http_req_rate(0) gt 100 }
    
    # Security rules
    acl is_health_check path_beg /health
    acl is_metrics path_beg /metrics
    acl is_api path_beg /api/
    acl is_graphql path_beg /graphql
    acl is_websocket hdr(Upgrade) -i websocket
    acl is_websocket hdr_beg(Host) -i ws
    
    # Block malicious requests
    acl is_bad_user_agent hdr(User-Agent) -i -f /etc/haproxy/bad-user-agents.lst
    http-request deny if is_bad_user_agent
    
    # Block common attack patterns
    acl is_sql_injection url_reg -i (union.*select|select.*from|insert.*into|delete.*from|drop.*table)
    http-request deny if is_sql_injection
    
    acl is_xss url_reg -i (<script|javascript:|vbscript:|onload=|onerror=)
    http-request deny if is_xss
    
    # Add security headers
    http-response set-header X-Frame-Options SAMEORIGIN
    http-response set-header X-Content-Type-Options nosniff
    http-response set-header X-XSS-Protection "1; mode=block"
    http-response set-header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
    http-response set-header Referrer-Policy "strict-origin-when-cross-origin"
    
    # Route to appropriate backends
    use_backend finnexus_api_backend if is_api
    use_backend finnexus_graphql_backend if is_graphql
    use_backend finnexus_websocket_backend if is_websocket
    use_backend finnexus_health_backend if is_health_check
    use_backend finnexus_metrics_backend if is_metrics
    
    # Default backend
    default_backend finnexus_api_backend

# Backend for main API
backend finnexus_api_backend
    balance roundrobin
    option httpchk GET /api/v1/health
    
    # Sticky sessions (if needed)
    cookie SERVERID insert indirect nocache
    
    # Servers
    server backend1 backend1:4000 check cookie backend1 inter 2000ms rise 2 fall 3
    server backend2 backend2:4000 check cookie backend2 inter 2000ms rise 2 fall 3
    server backend3 backend3:4000 check cookie backend3 inter 2000ms rise 2 fall 3
    
    # Backup servers (if main servers fail)
    server backup1 backup1:4000 check backup cookie backup1
    server backup2 backup2:4000 check backup cookie backup2

# Backend for GraphQL
backend finnexus_graphql_backend
    balance roundrobin
    option httpchk GET /graphql
    
    # GraphQL-specific timeouts
    timeout server 60s
    
    # Servers
    server backend1 backend1:4000 check inter 2000ms rise 2 fall 3
    server backend2 backend2:4000 check inter 2000ms rise 2 fall 3
    server backend3 backend3:4000 check inter 2000ms rise 2 fall 3

# Backend for WebSocket connections
backend finnexus_websocket_backend
    balance roundrobin
    option httpchk GET /health
    
    # WebSocket-specific settings
    timeout server 300s
    timeout tunnel 300s
    
    # Servers
    server backend1 backend1:4000 check inter 2000ms rise 2 fall 3
    server backend2 backend2:4000 check inter 2000ms rise 2 fall 3
    server backend3 backend3:4000 check inter 2000ms rise 2 fall 3

# Backend for health checks
backend finnexus_health_backend
    balance roundrobin
    option httpchk GET /health
    
    # Fast health checks
    timeout server 5s
    
    # Servers
    server backend1 backend1:4000 check inter 1000ms rise 1 fall 1
    server backend2 backend2:4000 check inter 1000ms rise 1 fall 1
    server backend3 backend3:4000 check inter 1000ms rise 1 fall 1

# Backend for metrics (restricted access)
backend finnexus_metrics_backend
    balance roundrobin
    option httpchk GET /metrics
    
    # Servers
    server backend1 backend1:4000 check inter 2000ms rise 2 fall 3
    server backend2 backend2:4000 check inter 2000ms rise 2 fall 3
    server backend3 backend3:4000 check inter 2000ms rise 2 fall 3

# Frontend for admin panel
frontend finnexus_admin_frontend
    bind *:8080
    bind *:8443 ssl crt /etc/ssl/certs/admin.finnexusai.com.pem
    
    # Redirect HTTP to HTTPS
    redirect scheme https if !{ ssl_fc }
    
    # Restrict access to admin panel
    acl admin_allowed src 10.0.0.0/8 172.16.0.0/12 192.168.0.0/16
    http-request deny unless admin_allowed
    
    # Route to admin backend
    default_backend finnexus_admin_backend

# Backend for admin panel
backend finnexus_admin_backend
    balance roundrobin
    option httpchk GET /api/v1/admin/health
    
    # Servers
    server backend1 backend1:4000 check inter 2000ms rise 2 fall 3
    server backend2 backend2:4000 check inter 2000ms rise 2 fall 3
    server backend3 backend3:4000 check inter 2000ms rise 2 fall 3

# Frontend for monitoring
frontend finnexus_monitoring_frontend
    bind *:9090
    bind *:9443 ssl crt /etc/ssl/certs/monitoring.finnexusai.com.pem
    
    # Redirect HTTP to HTTPS
    redirect scheme https if !{ ssl_fc }
    
    # Restrict access to monitoring
    acl monitoring_allowed src 10.0.0.0/8 172.16.0.0/12 192.168.0.0/16
    http-request deny unless monitoring_allowed
    
    # Route to monitoring backends
    acl is_grafana path_beg /grafana/
    acl is_prometheus path_beg /prometheus/
    acl is_alertmanager path_beg /alertmanager/
    
    use_backend grafana_backend if is_grafana
    use_backend prometheus_backend if is_prometheus
    use_backend alertmanager_backend if is_alertmanager
    
    default_backend grafana_backend

# Backend for Grafana
backend grafana_backend
    balance roundrobin
    option httpchk GET /grafana/api/health
    
    server grafana1 grafana:3000 check inter 2000ms rise 2 fall 3

# Backend for Prometheus
backend prometheus_backend
    balance roundrobin
    option httpchk GET /prometheus/-/healthy
    
    server prometheus1 prometheus:9090 check inter 2000ms rise 2 fall 3

# Backend for Alertmanager
backend alertmanager_backend
    balance roundrobin
    option httpchk GET /alertmanager/-/healthy
    
    server alertmanager1 alertmanager:9093 check inter 2000ms rise 2 fall 3

# Statistics and monitoring
listen stats
    bind *:8404
    stats enable
    stats uri /stats
    stats refresh 30s
    stats admin if TRUE
    stats auth admin:secure_password_here
    
    # Restrict access to stats
    acl stats_allowed src 10.0.0.0/8 172.16.0.0/12 192.168.0.0/16
    http-request deny unless stats_allowed

# Mailers for notifications
mailers finnexus_mailers
    mailer smtp1 127.0.0.1:587

# Alert configuration
alert finnexus_alerts
    mailer finnexus_mailers
    level warning
    myhostname haproxy.finnexusai.com
    description "FinNexusAI HAProxy Alert"
